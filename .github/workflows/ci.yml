name: CI

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v1
      - run: |
          cargo test --no-run --workspace --locked
          timeout 5m cargo test -p pathfinder -- --skip ethereum::

          # Run Ethereum tests using Infura endpoint
          PATHFINDER_ETHEREUM_HTTP_GOERLI_URL=${{ secrets.INFURA_GOERLI_URL }} \
            PATHFINDER_ETHEREUM_HTTP_GOERLI_PASSWORD=${{ secrets.INFURA_GOERLI_PASSWORD }} \
            PATHFINDER_ETHEREUM_HTTP_MAINNET_URL=${{ secrets.INFURA_MAINNET_URL }} \
            PATHFINDER_ETHEREUM_HTTP_MAINNET_PASSWORD=${{ secrets.INFURA_MAINNET_PASSWORD }} \
            timeout 3m cargo test -p pathfinder --locked -- ethereum::

          # Run Ethereum tests using Alchemy endpoint
          PATHFINDER_ETHEREUM_HTTP_GOERLI_URL=${{ secrets.ALCHEMY_GOERLI_URL }} \
            PATHFINDER_ETHEREUM_HTTP_GOERLI_PASSWORD=${{ secrets.ALCHEMY_GOERLI_PASSWORD }} \
            PATHFINDER_ETHEREUM_HTTP_MAINNET_URL=${{ secrets.ALCHEMY_MAINNET_URL }} \
            PATHFINDER_ETHEREUM_HTTP_MAINNET_PASSWORD=${{ secrets.ALCHEMY_MAINNET_PASSWORD }} \
            timeout 3m cargo test -p pathfinder --locked -- ethereum::

          timeout 3m cargo test -p stark_hash --all-targets --locked
          timeout 1m cargo test -p stark_curve --all-targets --locked
  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - uses: Swatinem/rust-cache@v1
      - run: cargo clippy --workspace --all-targets --locked -- -D warnings -D rust_2018_idioms

  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - uses: Swatinem/rust-cache@v1
      - run: cargo fmt --all -- --check

  doc:
    runs-on: ubuntu-latest
    env:
      RUSTDOCFLAGS: "-D warnings"
    steps:
      - uses: actions/checkout@v2
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v1
      - run: cargo doc --no-deps --document-private-items

  dep-sort:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v1
      - run: |
          cargo install cargo-sort
          cargo sort --check --workspace

  python:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Prepare py/
        run: |
          cd py
          python -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip
          pip install --requirement requirements-dev.txt

      - name: Test (python)
        run: |
          source py/.venv/bin/activate
          cd py
          pytest

      - name: Formatting (python)
        run: |
          source py/.venv/bin/activate
          cd py
          black --check src/

      - name: Lints (python)
        run: |
          source py/.venv/bin/activate
          cd py
          flake8 src/

      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v1

      - name: Integration (rust)
        run: |
          source py/.venv/bin/activate
          cargo test --no-run -p pathfinder
          timeout 5m cargo test -p pathfinder -- cairo::ext_py --ignored

  fuzz_targets:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: nightly
      - uses: Swatinem/rust-cache@v1
      - run: cargo install cargo-fuzz
      - name: stark_hash
        run: cargo fuzz build
        working-directory: crates/stark_hash
