syntax = "proto3";

package starknet.common;

message Felt252 {
    bytes elements = 1;
}

// A hash value representable as a Felt252
message Hash {
    bytes elements = 1;
}

// A 256 bit hash value (like Keccak256)
message Hash256 {
    // Required to be 32 bytes long
    bytes elements = 1;
}

message Hashes {
    repeated Hash items = 1;
}

message Address {
    bytes elements = 1;
}

message PeerID {
    bytes id = 1;
}

message Uint128 {
    uint64 low = 1;
    uint64 high = 2;
}

message ConsensusSignature {
    Felt252 r = 1;
    Felt252 s = 2;
}

message Patricia {
    uint64 n_leaves = 1;  // needed to know the height, so as to how many nodes to expect in a proof.
                          // and also when receiving all leaves, how many to expect
    Hash root = 2;
}

message BlockID {
    uint64 number = 1;
    Hash header = 2;
}

enum L1DataAvailabilityMode {
    Calldata = 0;
    Blob = 1;
}

enum VolitionDomain {
    L1 = 0;
    L2 = 1;
}

message BlockProof {
    repeated bytes proof = 1;
}

// mark the end of a stream of messages
message Fin {}