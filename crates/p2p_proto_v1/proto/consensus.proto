syntax = "proto3";

package starknet.consensus;

import "common.proto";
import "google/protobuf/timestamp.proto";
import "state.proto";
import "transaction.proto";

// WIP - will change

message Proposal {
    uint64                             block_number      = 2;
    uint32                             round             = 3;
    uint32                             pol               = 4;  // proof of lock
    starknet.common.Hash               block_header_hash = 5;
    google.protobuf.Timestamp          timestamp         = 6;
    starknet.common.ConsensusSignature signature         = 7;
}

// A block proposal is a series of (Transactions+, StateDiff)* BlockHeader

message Vote {
    enum  Type {
        UNKNOWN   = 0;
        Proposal  = 1;
        Prevote   = 2;
        Precommit = 3;
    };

    Proposal                           proposal          = 1;
    starknet.common.Address            validator_address = 2;
    int32                              validator_index   = 3;  // ???
    starknet.common.ConsensusSignature signature         = 4;
}

message CreateBlock {
    oneof messages {
        starknet.transaction.Transactions transactions = 1;
        starknet.state.StateDiff          state_diff   = 2;
        Proposal                          proposal     = 3;
    }
}
