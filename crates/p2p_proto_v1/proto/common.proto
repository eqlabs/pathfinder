syntax = "proto3";

package starknet.common;

message Felt252 {
    bytes elements = 1;
}

message Hash {
    bytes elements = 1;
}

message Hashes {
    repeated Hash items = 1;
}

message Address {
    bytes elements = 1;
}

message PeerID {
    bytes id = 1;
}

message ConsensusSignature {
    Felt252 r = 1;
    Felt252 s = 2;
}

message Merkle {
    uint32 n_leaves = 1; // needed to know the height, so as to how many nodes to expect in a proof.
                         // and also when receiving all leaves, how many to expect
    Hash root = 2;
}

message Patricia {
    uint32 height = 1;
    Hash root = 2;
}

message Iteration {
    enum Direction {
        Forward = 0;
        Backward = 1;
    }
    uint64 start_block = 1; // exclude start from the result
    Direction direction = 2;
    uint64 limit = 3;
    uint64 step = 4; // to allow interleaving from several nodes
    // bool interleave = 6; // return results in any order of blocks, per block the messages should still be in the order specified
}

// mark the end of a stream of messages
// TBD: may not be required if we open a stream per request.
message Fin {
    enum Error {
        busy = 0;
        too_much = 1;
        unknown = 2;
        pruned = 3;
    }
    optional Error error = 1;
}
