[package]
name = "pathfinder"
version = { workspace = true }
authors = { workspace = true }
edition = { workspace = true }
license = { workspace = true }
rust-version = { workspace = true }
# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[lib]
name = "pathfinder_lib"
path = "src/lib.rs"

[features]
tokio-console = ["console-subscriber", "tokio/tracing"]
p2p = []
aggregate_bloom = []

[dependencies]
anyhow = { workspace = true }
async-trait = { workspace = true }
axum = { workspace = true }
base64 = { workspace = true }
bitvec = { workspace = true }
bytes = { workspace = true }
clap = { workspace = true, features = ["derive", "env", "wrap_help"] }
console-subscriber = { workspace = true, optional = true }
fake = { workspace = true }
flate2 = { workspace = true }
futures = { workspace = true, features = ["alloc"] }
http = { workspace = true }
ipnet = { workspace = true }
jemallocator = { workspace = true }
make-stream = { path = "../make-stream" }
metrics = { workspace = true }
metrics-exporter-prometheus = { workspace = true }
p2p = { path = "../p2p" }
p2p_proto = { path = "../p2p_proto" }
pathfinder-block-hashes = { path = "../block-hashes" }
pathfinder-common = { path = "../common" }
pathfinder-compiler = { path = "../compiler" }
pathfinder-crypto = { path = "../crypto" }
pathfinder-ethereum = { path = "../ethereum" }
pathfinder-executor = { path = "../executor" }
pathfinder-merkle-tree = { path = "../merkle-tree" }
pathfinder-retry = { path = "../retry" }
pathfinder-rpc = { path = "../rpc" }
pathfinder-serde = { path = "../serde" }
pathfinder-storage = { path = "../storage" }
primitive-types = { workspace = true }
rand = { workspace = true }
rayon = { workspace = true }
reqwest = { workspace = true }
semver = { workspace = true }
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true, features = [
    "arbitrary_precision",
    "raw_value",
] }
sha3 = { workspace = true }
starknet-gateway-client = { path = "../gateway-client" }
starknet-gateway-types = { path = "../gateway-types" }
tempfile = { workspace = true }
thiserror = { workspace = true }
time = { workspace = true, features = ["macros"] }
tokio = { workspace = true, features = ["rt-multi-thread", "macros", "signal"] }
tokio-stream = { workspace = true, features = ["sync"] }
tracing = { workspace = true }
tracing-subscriber = { workspace = true, features = [
    "env-filter",
    "time",
    "ansi",
] }
url = { workspace = true }
zeroize = { workspace = true }
zstd = { workspace = true }

[dev-dependencies]
assert_matches = { workspace = true }
const-decoder = { workspace = true }
flate2 = { workspace = true }
mockall = { workspace = true }
pathfinder-common = { path = "../common", features = ["full-serde"] }
pathfinder-compiler = { path = "../compiler" }
pathfinder-executor = { path = "../executor" }
pathfinder-rpc = { path = "../rpc" }
pathfinder-storage = { path = "../storage" }
pretty_assertions_sorted = { workspace = true }
proptest = { workspace = true }
rand_chacha = { workspace = true }
rstest = { workspace = true }
serde_with = { workspace = true }
starknet-gateway-test-fixtures = { path = "../gateway-test-fixtures" }
starknet_api = { workspace = true }
tokio = { workspace = true, features = ["test-util"] }
warp = { workspace = true }
